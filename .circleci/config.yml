# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#

environment-defaults: &environment-defaults
  working_directory: ~/repo

test-defaults: &test-defaults
  <<: *environment-defaults
  steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run:
        name: install dependencies
        command: |
          bundle install --jobs=4 --retry=3 --path vendor/bundle

    - save_cache:
        paths:
          - ./vendor/bundle
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}

    - run:
        name: wait for database
        command: |
          if [[ -z "${DB_WAIT_ADDRESS}" ]]; then
            echo "nothing to wait for"
          else
            dockerize -wait ${DB_WAIT_ADDRESS} -timeout 60s
          fi

    # run tests!
    - run:
        name: run tests
        command: |
          mkdir /tmp/test-results
          TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

          bundle exec rspec --format progress \
                          --format RspecJunitFormatter \
                          --out /tmp/test-results/rspec.xml \
                          --format progress \
                          $TEST_FILES

    # collect reports
    - store_test_results:
        path: /tmp/test-results
    - store_artifacts:
        path: /tmp/test-results
        destination: test-results

version: 2
jobs:
  test-sqlite3:
    <<: *test-defaults
    docker:
      - image: circleci/ruby:2.5

  test-postgres-10:
    <<: *test-defaults
    docker:
      - image: circleci/ruby:2.5
        environment:
          PRUNE_AR_TEST_DATABASE_TYPE: postgres
          DB_WAIT_ADDRESS: tcp://localhost:5432
      - image: circleci/postgres:10-alpine-ram

  test-postgres-9.6:
    <<: *test-defaults
    docker:
      - image: circleci/ruby:2.5
        environment:
          PRUNE_AR_TEST_DATABASE_TYPE: postgres
          DB_WAIT_ADDRESS: tcp://localhost:5432
      - image: circleci/postgres:9.6-alpine-ram

  test-postgres-11:
    <<: *test-defaults
    docker:
      - image: circleci/ruby:2.5
        environment:
          PRUNE_AR_TEST_DATABASE_TYPE: postgres
          DB_WAIT_ADDRESS: tcp://localhost:5432
      - image: circleci/postgres:11-ram

  test-mysql-5:
    <<: *test-defaults
    docker:
      - image: circleci/ruby:2.5
        environment:
          PRUNE_AR_TEST_DATABASE_TYPE: mysql
          DB_WAIT_ADDRESS: tcp://127.0.0.1:3306
      - image: circleci/mysql:5-ram

  test-mysql-8:
    <<: *test-defaults
    docker:
      - image: circleci/ruby:2.5
        environment:
          PRUNE_AR_TEST_DATABASE_TYPE: mysql
          DB_WAIT_ADDRESS: tcp://127.0.0.1:3306
      - image: circleci/mysql:8-ram
        command: [--default-authentication-plugin=mysql_native_password]

  test-mariadb-5:
    <<: *test-defaults
    docker:
      - image: circleci/ruby:2.5
        environment:
          PRUNE_AR_TEST_DATABASE_TYPE: mysql
          DB_WAIT_ADDRESS: tcp://127.0.0.1:3306
      - image: circleci/mariadb:5-ram

  test-mariadb-10:
    <<: *test-defaults
    docker:
      - image: circleci/ruby:2.5
        environment:
          PRUNE_AR_TEST_DATABASE_TYPE: mysql
          DB_WAIT_ADDRESS: tcp://127.0.0.1:3306
      - image: circleci/mariadb:10-ram

  rubocop:
    <<: *environment-defaults
    docker:
      - image: circleci/ruby:2.5
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: run rubocop
          command: |
            mkdir /tmp/test-results
            bundle exec rubocop --format RuboCop::Formatter::JUnitFormatter \
                                --require rubocop/formatter/junit_formatter \
                                --parallel \
                                --out /tmp/test-results/rubocop.xml
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

workflows:
  version: 2
  build:
    jobs:
      - test-sqlite3
      - test-postgres-9.6
      - test-postgres-10
      - test-postgres-11
      - test-mysql-5
      - test-mysql-8
      - test-mariadb-5
      - test-mariadb-10
      - rubocop
